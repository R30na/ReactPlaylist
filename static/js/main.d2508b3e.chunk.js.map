{"version":3,"sources":["asset/images/play.svg","asset/images/logo.svg","asset/images/play-button.svg","asset/images/pause-button.svg","asset/images/mute.svg","asset/images/speaker.svg","redux/constants/action-types.js","redux/reducers/app-reducer.js","redux/reducers/index.js","redux/store.js","services/Storage.js","redux/actions/app-actions.js","components/playlist/Playlist.js","components/player/VideoPlayer.js","components/player/PlayerPage.js","route.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ADD_PLAYLIST","ENABLE_LOADING","DISABLE_LOADING","PLAYLISTS_AVAILABLE","ACTIVE_PLAYLIST_AVAILABLE","ADD_VIDEO","UPDATE_CURRENT_PLAYING_VIDEO","STOP_AUTOPLAY","appDataState","loading","playingNextVideo","myplaylists","activePlayList","currentPlayingVideoIndex","title","videos","artist","url","combineReducers","appReducer","state","arguments","length","undefined","action","type","Object","assign","createStore","rootReducer","applyMiddleware","thunk","StorageService","saveItem","_saveItem","asyncToGenerator","regenerator_default","a","mark","_callee","key","item","wrap","_context","prev","next","localStorage","setItem","JSON","stringify","abrupt","t0","console","log","alert","stop","this","_x","_x2","apply","getItem","_getItem","_callee2","value","_context2","parse","sent","_x3","addPlayList","playlist","dispatch","then","playlists","push","enableLoading","disableLoading","getPlaylists","getActivePlaylist","index","addVideo","video","playListIndex","tempLists","updateCurrentPlayingVideo","videoIndex","stopAutoPlay","PlayList","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","chooseMode","addPlaylistMode","listPlaylistMode","playListTitle","_this2","setTimeout","location","mode","setState","link","history","_this3","react_default","createElement","className","renderChooseMode","renderAddMode","renderListMode","_this4","onClick","createPlaylist","_this5","placeholder","onChange","e","target","_this6","media","style","textAlign","fontSize","padding","fontWeight","map","Navigate","width","src","require","alt","PureComponent","connect","bindActionCreators","VideoPlayer","paused","muted","formattedLength","currentTime","formattedTime","volume","interval","customVolume","setInterval","duration","payListLength","play","clearInterval","v","document","getElementById","pause","dur","toFixed","toMMSS","String","prototype","sec_num","parseInt","hours","Math","floor","minutes","seconds","cur","time_range","querySelector","volume_range","id","height","customTime","step","min","max","mute","PlayerPage","addVideoMode","videoTitle","videoArtist","videoUrl","playingVideoIndex","components_player_VideoPlayer","Date","Routing","BrowserRouter","logo","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","es","store","route","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2508b3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.bee6ec5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/play-button.122f38c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause-button.e48e19ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/mute.4263659a.svg\";","module.exports = __webpack_public_path__ + \"static/media/speaker.3a7c5aa9.svg\";","export const ADD_PLAYLIST = \"ADD_PLAYLIST\"\nexport const ENABLE_LOADING = \"ENABLE_LOADING\"\nexport const DISABLE_LOADING = \"DISABLE_LOADING\"\nexport const PLAYLISTS_AVAILABLE = \"PLAYLISTS_AVAILABLE\"\nexport const ACTIVE_PLAYLIST_AVAILABLE = \"PLAYLIST_AVAILABLE\"\nexport const ADD_VIDEO = \"ADD_VIDEO\"\nexport const UPDATE_CURRENT_PLAYING_VIDEO = \"UPDATE_CURRENT_PLAYING_VIDEO\"\nexport const STOP_AUTOPLAY = \"STOP_AUTOPLAY\"","import { ADD_PLAYLIST } from \"../constants/action-types\"\nimport { ENABLE_LOADING } from \"../constants/action-types\"\nimport { DISABLE_LOADING } from \"../constants/action-types\"\nimport { PLAYLISTS_AVAILABLE } from \"../constants/action-types\"\nimport { ACTIVE_PLAYLIST_AVAILABLE } from \"../constants/action-types\"\nimport { ADD_VIDEO } from \"../constants/action-types\"\nimport { UPDATE_CURRENT_PLAYING_VIDEO } from \"../constants/action-types\"\nimport { STOP_AUTOPLAY } from \"../constants/action-types\"\n\n\nlet appDataState = {\n    loading: true,\n    playingNextVideo: false,\n    myplaylists: [],\n    activePlayList: {\n        currentPlayingVideoIndex: 0,\n        title: '',\n        videos: [{\n            title: '',\n            artist: '',\n            url: ''\n        }]\n    }\n}\n\n\nexport const appReducer = (state = appDataState, action) => {\n\n    switch (action.type) {\n        case ADD_PLAYLIST:\n            state = Object.assign({}, state, {\n                loading: action.loading,\n            })\n            return state\n        case ENABLE_LOADING:\n            state = Object.assign({}, state, {\n                loading: action.loading,\n            })\n            return state\n        case DISABLE_LOADING:\n            state = Object.assign({}, state, {\n                loading: action.loading,\n            })\n            return state\n        case PLAYLISTS_AVAILABLE:\n            state = Object.assign({}, state, {\n                loading: action.loading,\n                myplaylists: action.myplaylists,\n            })\n            return state\n        case ACTIVE_PLAYLIST_AVAILABLE:\n            state = Object.assign({}, state, {\n                loading: action.loading,\n                activePlayList: action.activePlayList,\n            })\n            return state\n        case ADD_VIDEO:\n            state = Object.assign({}, state, {\n                loading: action.loading,\n                activePlayList: action.activePlayList,\n            })\n            return state\n        case UPDATE_CURRENT_PLAYING_VIDEO:\n            state = Object.assign({}, state, {\n                loading: action.loading,\n                activePlayList: action.activePlayList,\n                playingNextVideo: action.playingNextVideo,\n            })\n            return state\n        case STOP_AUTOPLAY:\n            state = Object.assign({}, state, {\n                playingNextVideo: action.playingNextVideo,\n            })\n            return state\n        default:\n            return state\n    }\n\n}","import {combineReducers} from \"redux\"\nimport {appReducer} from \"./app-reducer\"\n\nexport default combineReducers({appReducer}) \n","import {createStore, applyMiddleware} from \"redux\"\nimport thunk from 'redux-thunk'\nimport rootReducer from \"./reducers\"\n\nexport default createStore(rootReducer, applyMiddleware(thunk)) ","const StorageService = {\n\n    async saveItem(key, item) {\n        try {\n            localStorage.setItem(key, JSON.stringify(item))\n            return true\n        } catch (error) {\n            console.log('Error: ' + error)\n            alert(JSON.stringify(error, null, 4))\n        }\n    },\n\n    async getItem(key) {\n        try {\n            const value = localStorage.getItem(key)\n            return await JSON.parse(value)\n        } catch (error) {\n            console.log('Error: ' + error)\n            alert(JSON.stringify(error, null, 4))\n        }\n    },\n\n\n}\n\nexport default StorageService ","import { ADD_PLAYLIST } from \"../constants/action-types\"\nimport { ENABLE_LOADING } from \"../constants/action-types\"\nimport { DISABLE_LOADING } from \"../constants/action-types\"\nimport { PLAYLISTS_AVAILABLE } from \"../constants/action-types\"\nimport { ACTIVE_PLAYLIST_AVAILABLE } from \"../constants/action-types\"\nimport { ADD_VIDEO } from \"../constants/action-types\"\nimport { UPDATE_CURRENT_PLAYING_VIDEO } from \"../constants/action-types\"\nimport { STOP_AUTOPLAY } from \"../constants/action-types\"\n\nimport StorageService from '../../services/Storage'\n\nexport function addPlayList(playlist) {\n    return (dispatch) => {\n        StorageService.getItem('myplaylists').then(playlists => {\n            if (!playlists) {\n                playlists = []\n            }\n            playlists.push(playlist)\n            StorageService.saveItem('myplaylists', playlists)\n            dispatch({\n                type: ADD_PLAYLIST,\n                loading: false\n            })\n        })\n\n    }\n}\n\nexport function enableLoading() {\n    return (dispatch) => {\n        dispatch({\n            type: ENABLE_LOADING,\n            loading: true\n        })\n    }\n}\n\n\nexport function disableLoading() {\n    return (dispatch) => {\n        dispatch({\n            type: DISABLE_LOADING,\n            loading: false\n        })\n    }\n}\n\n\nexport function getPlaylists() {\n    return (dispatch) => {\n        StorageService.getItem('myplaylists').then(playlists => {\n            if (playlists) {\n                dispatch({\n                    type: PLAYLISTS_AVAILABLE,\n                    loading: false,\n                    myplaylists: playlists\n                })\n            }\n        })\n    }\n}\n\nexport function getActivePlaylist(index) {\n    return (dispatch) => {\n        StorageService.getItem('myplaylists').then(playlists => {\n            if (playlists) {\n                dispatch({\n                    type: ACTIVE_PLAYLIST_AVAILABLE,\n                    loading: false,\n                    activePlayList: playlists[index]\n                })\n            }\n        })\n    }\n}\n\nexport function addVideo(video, playListIndex) {\n    return (dispatch) => {\n        StorageService.getItem('myplaylists').then(playlists => {\n            if (playlists) {\n                var tempLists = playlists\n                tempLists[playListIndex].videos.push(video)\n                tempLists[playListIndex].currentPlayingVideoIndex = tempLists[playListIndex].videos.length - 1\n                StorageService.saveItem('myplaylists', tempLists)\n                dispatch({\n                    type: ADD_VIDEO,\n                    loading: false,\n                    activePlayList: tempLists[playListIndex],\n                })\n            }\n        })\n    }\n}\n\nexport function updateCurrentPlayingVideo(playListIndex, videoIndex) {\n    return (dispatch) => {\n        StorageService.getItem('myplaylists').then(playlists => {\n            if (playlists) {\n                var tempLists = playlists\n                tempLists[playListIndex].currentPlayingVideoIndex = videoIndex\n                StorageService.saveItem('myplaylists', tempLists)\n                dispatch({\n                    type: UPDATE_CURRENT_PLAYING_VIDEO,\n                    loading: false,\n                    activePlayList: tempLists[playListIndex],\n                    playingNextVideo: true,\n                })\n            }\n        })\n    }\n}\n\nexport function stopAutoPlay() {\n    return (dispatch) => {\n        dispatch({\n            type: STOP_AUTOPLAY,\n            playingNextVideo: false,\n        })\n    }\n}","import React, { PureComponent } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { addPlayList, enableLoading, disableLoading, getPlaylists } from '../../redux/actions/app-actions'\nimport './PlayList.css'\n\n\nclass PlayList extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            chooseMode: true,\n            addPlaylistMode: false,\n            listPlaylistMode: false,\n            playListTitle: ''\n        }\n\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.disableLoading()\n        }, 1000)\n        if (this.props.location.state.mode == 'listPlaylistMode') {\n            this.getPlaylists()\n            this.setState({ chooseMode: false, addPlaylistMode: false, listPlaylistMode: true })\n        }\n    }\n\n    Navigate(link, index) {\n        this.props.history.push(link, { 'index': index })\n    }\n\n    addPlayList() {\n        var playlist = {\n            title: this.state.playListTitle,\n            videos: []\n        }\n        this.props.addPlayList(playlist)\n        this.setState({ chooseMode: true, addPlaylistMode: false, listPlaylistMode: false })\n    }\n\n    createPlaylist() {\n        this.setState({ chooseMode: false, addPlaylistMode: true, listPlaylistMode: false })\n    }\n\n    getPlaylists() {\n        this.props.enableLoading()\n        this.setState({ chooseMode: false, addPlaylistMode: false, listPlaylistMode: true })\n        setTimeout(() => {\n            this.props.getPlaylists()\n            this.props.disableLoading()\n        }, 1000)\n    }\n\n    render() {\n        return (\n            <div className='PlayListPage'>\n                {this.state.chooseMode && this.renderChooseMode()}\n                {this.state.addPlaylistMode && this.renderAddMode()}\n                {this.state.listPlaylistMode && this.renderListMode()}\n            </div>\n        )\n    }\n\n    renderChooseMode() {\n        return (\n            <div className='Panel'>\n                <button className='Button' onClick={() => this.createPlaylist()}>Create a Playlist</button>\n                <button className='Button' onClick={() => this.getPlaylists()}>Show My Playlists</button>\n            </div>\n        )\n    }\n\n\n    renderAddMode() {\n        return (\n            <div className='Panel'>\n                <input type='text' className='TextInput' placeholder='Title'\n                    onChange={(e) => this.setState({ playListTitle: e.target.value })} />\n                <button className='Button' onClick={() => this.addPlayList()}>Add Playlist</button>\n            </div>\n        )\n    }\n\n    renderListMode() {\n        const media = this.props.myplaylists\n        return (\n            <div className='PanelList'>\n                <div style={{ textAlign: 'center', fontSize: '3vw', padding: '1vw',fontWeight:'bolder' }}>My PlayLists</div>\n                {media.length > 0 && media.map((item, index) =>\n                    <button className='ButtonStart' onClick={() => this.Navigate('/player', index)} key={index}>\n                        <div className='StartPlay'>\n                            <div style={{ width: '30%' }}>\n                                <img className='PlayButton' src={require('../../asset/images/play.svg')} alt='Play' />\n                            </div>\n                            <div style={{ width: '30%' }}>{item.title}</div>\n                            <div style={{ width: '30%' }}>{index + 1}</div>\n                        </div>\n                    </button>\n                )}\n                <div className='backButton'\n                    onClick={() => this.setState({ chooseMode: true, addPlaylistMode: false, listPlaylistMode: false })}>\n                    <span className='arrowBack'>&#8249;</span></div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.appReducer.loading,\n        myplaylists: state.appReducer.myplaylists,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        addPlayList,\n        enableLoading,\n        disableLoading,\n        getPlaylists\n    }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayList) \n","import React, { PureComponent } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { updateCurrentPlayingVideo, stopAutoPlay } from '../../redux/actions/app-actions'\nimport './VideoPlayer.css'\n\nclass VideoPlayer extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            paused: true,\n            muted: false,\n            length: null,\n            formattedLength: null,\n            currentTime: 0,\n            formattedTime: null,\n            volume: 0.25\n        }\n        this.interval = ''\n    }\n\n    componentDidMount() {\n        this.customVolume()\n        this.interval = setInterval(() => {\n            this.setState({ currentTime: this.currentTime() })\n            this.setState({ length: this.duration() })\n\n            if (this.currentTime() === this.duration() && (this.props.videoIndex + 1) === this.props.payListLength) {\n                this.props.updateCurrentPlayingVideo(this.props.playListIndex, 0)\n            } else if (this.currentTime() === this.duration()) {\n                this.props.updateCurrentPlayingVideo(this.props.playListIndex, this.props.videoIndex + 1)\n            }\n\n            // console.log(this.props.playListIndex)\n            // console.log(this.props.payListLength)\n            // console.log(this.props.videoIndex)\n            // console.log(this.duration())\n            // console.log(this.currentTime())\n            // console.log('Paused:' + this.state.paused)\n\n        }, 500)\n\n        if (this.props.playingNextVideo) {\n            this.play()\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n        this.props.stopAutoPlay()\n    }\n\n\n    play() {\n        this.duration()\n        const v = document.getElementById(\"video\")\n\n        if (this.state.paused === true) {\n            v.play()\n            this.setState({\n                paused: false\n            })\n        } else {\n            v.pause()\n            this.setState({\n                paused: true\n            })\n        }\n    }\n\n    duration() {\n        if (document.getElementById(\"video\")) {\n            let dur = document.getElementById(\"video\").duration\n            dur = dur.toFixed()\n            let formattedLength = dur.toMMSS()\n\n            this.setState({\n                length: dur,\n                formattedLength: formattedLength\n            })\n            return dur\n        }\n    }\n\n    currentTime() {\n        String.prototype.toMMSS = function () {\n            let sec_num = parseInt(this, 10)\n            let hours = Math.floor(sec_num / 3600)\n            let minutes = Math.floor((sec_num - hours * 3600) / 60)\n            let seconds = sec_num - hours * 3600 - minutes * 60\n\n            if (hours < 10) {\n                hours = \"0\" + hours\n            }\n            if (minutes < 10) {\n                minutes = \"0\" + minutes\n            }\n            if (seconds < 10) {\n                seconds = \"0\" + seconds\n            }\n\n            return hours + \":\" + minutes + \":\" + seconds\n        }\n\n        if (document.getElementById(\"video\")) {\n            let cur = document.getElementById(\"video\").currentTime\n            cur = cur.toFixed()\n            let formattedTime = cur.toMMSS()\n            this.setState({\n                currentTime: cur,\n                formattedTime: formattedTime\n            })\n            if (parseInt(this.state.currentTime) === parseInt(this.state.length)) {\n                this.setState({ paused: true })\n            }\n\n            return cur\n        }\n\n\n    }\n\n    customTime() {\n        const time_range = document.querySelector(\".time_range\")\n        document.getElementById(\"video\").currentTime = time_range.value\n\n        this.setState({\n            currentTime: time_range.value\n        })\n    }\n\n    customVolume() {\n        const volume_range = document.querySelector(\".volume_range\")\n        document.getElementById(\"video\").volume = volume_range.value\n\n        this.setState({\n            volume: volume_range.value\n        })\n\n        if (volume_range.value === 0) {\n            this.setState({\n                muted: true\n            })\n        } else {\n            this.setState({\n                muted: false\n            })\n        }\n    }\n\n    mute() {\n        document.getElementById(\"video\").muted = true\n\n        this.setState({\n            muted: true\n        })\n\n        if (this.state.muted === true) {\n            document.getElementById(\"video\").muted = false\n\n            this.setState({\n                muted: false\n            })\n        } else {\n            document.getElementById(\"video\").muted = true\n            this.setState({\n                muted: true\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"VideoPlayer\">\n                <video id=\"video\" width=\"100%\" height=\"100%\">\n                    <source src={this.props.src} type=\"video/mp4\" />\n                </video>\n                <div className=\"controls\">\n                    <button onClick={() => this.play()} className=\"play_pause_btn\">\n                        {\n                            this.state.paused ?\n                                <img src={require('../../asset/images/play-button.svg')} width='17vw' alt='Play' />\n                                :\n                                <img src={require('../../asset/images/pause-button.svg')} width='17vw' alt='Pause' />\n                        }\n                    </button>\n                    <span className=\"time\">\n                        <span className=\"video_time\">{this.state.formattedTime}</span>\n                        <span> / </span>\n                        <span className=\"video_length\">{this.state.formattedLength}</span>\n                    </span>\n                    <input\n                        type=\"range\"\n                        className=\"time_range\"\n                        onChange={() => this.customTime()}\n                        value={this.state.currentTime}\n                        step={0.1}\n                        min={0}\n                        max={this.state.length}\n                    />\n\n                    <button onClick={() => this.mute()} className=\"play_pause_btn\">\n                        {\n                            this.state.muted ?\n                                <img src={require('../../asset/images/mute.svg')} width='17vw' alt='Mute' />\n                                :\n                                <img src={require('../../asset/images/speaker.svg')} width='17vw' alt='Unmute' />\n                        }\n                    </button>\n\n                    <input\n                        type=\"range\"\n                        className=\"volume_range\"\n                        onChange={() => this.customVolume()}\n                        value={this.state.volume}\n                        step={0.1}\n                        min={0}\n                        max={1}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.appReducer.loading,\n        activePlayList: state.appReducer.activePlayList,\n        playingNextVideo: state.appReducer.playingNextVideo,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n\n        updateCurrentPlayingVideo,\n        stopAutoPlay\n\n    }, dispatch)\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlayer)\n","import React, {PureComponent} from 'react'\nimport VideoPlayer from './VideoPlayer'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {\n    getActivePlaylist,\n    enableLoading,\n    disableLoading,\n    addVideo,\n    updateCurrentPlayingVideo\n} from '../../redux/actions/app-actions'\nimport './PlayerPage.css'\n\n\nclass PlayerPage extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            addVideoMode: false,\n            videoTitle: '',\n            videoArtist: '',\n            videoUrl: '',\n        }\n        this.playListIndex = props.location.state.index\n    }\n\n    componentWillMount() {\n        this.props.enableLoading()\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.getActivePlaylist(this.playListIndex)\n            this.props.disableLoading()\n        }, 1000)\n        // this.setState({currentPlayingVideoIndex:1})\n\n    }\n\n    addVideo() {\n        var video = {\n            title: this.state.videoTitle,\n            artist: this.state.videoArtist,\n            url: this.state.videoUrl,\n        }\n        this.props.addVideo(video, this.playListIndex)\n        this.setState({addVideoMode: false})\n    }\n\n    updateCurrentPlayingVideo(index) {\n        this.props.updateCurrentPlayingVideo(this.playListIndex, index)\n    }\n\n\n    render() {\n        const media = this.props.activePlayList.videos\n        const playingVideoIndex = this.props.activePlayList.currentPlayingVideoIndex\n\n\n        return (\n            <div className=\"PlayerPage\">\n                {this.state.addVideoMode &&\n                <div className='modal'>\n                    <div className='modal-content'>\n                        <input type='text' className='TextInput' placeholder='Title'\n                               onChange={(e) => this.setState({videoTitle: e.target.value})}/>\n                        <input type='text' className='TextInput' placeholder='Artist'\n                               onChange={(e) => this.setState({videoArtist: e.target.value})}/>\n                        <input type='text' className='TextInput' placeholder='Video URL'\n                               onChange={(e) => this.setState({videoUrl: e.target.value})}/>\n                        <button className='Button' onClick={() => this.addVideo()}>Add Video</button>\n                        <button className='Button' onClick={() => this.setState({addVideoMode: false})}>Cancel</button>\n                    </div>\n                </div>\n                }\n                <div>\n                    <div className='PlayList'>\n                        <div className='buttonContainer'>\n                            <button className='Button' onClick={() => this.setState({addVideoMode: true})}>Add Video\n                            </button>\n                        </div>\n                        {media.length === 0 && <div className='TextInput'>No Videos Yet..! Please Add some...</div>}\n                        {media.map((item, index) =>\n                            <button\n                                className={this.props.activePlayList.currentPlayingVideoIndex === index ? 'ButtonStart active' : 'ButtonStart'}\n                                key={index}\n                                onClick={() => this.updateCurrentPlayingVideo(index)}>\n                                <div className='StartPlay'>\n                                    <div style={{width: '20%'}}>\n                                        <img className='PlayButton' src={require('../../asset/images/play.svg')}\n                                             key={index} alt='Play'/>\n                                    </div>\n                                    <div style={{width: '40%'}}>{item.title}</div>\n                                    <div style={{width: '40%'}}>{item.artist}</div>\n                                </div>\n                            </button>\n                        )}\n                    </div>\n                    <div className='PlaylistTitle'>{this.props.activePlayList.title}</div>\n                    <div className=\"Player\">\n                        {media.length > 0 &&\n                        <VideoPlayer\n                            key={Date()}\n                            src={media[playingVideoIndex].url}\n                            playListIndex={this.playListIndex}\n                            payListLength={media.length}\n                            videoIndex={playingVideoIndex}\n                        />}\n                    </div>\n                    <div className='backButton' onClick={() => this.props.history.push('/',{mode:'listPlaylistMode'})}><span\n                        className='arrowBack'>&#8249;</span></div>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.appReducer.loading,\n        activePlayList: state.appReducer.activePlayList,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        getActivePlaylist,\n        enableLoading,\n        disableLoading,\n        addVideo,\n        updateCurrentPlayingVideo\n\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerPage) \n","import React, {PureComponent} from 'react'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport PlayList from './components/playlist/Playlist'\nimport PlayerPage from \"./components/player/PlayerPage\"\nimport logo from './asset/images/logo.svg'\n\nimport {connect} from 'react-redux'\n\n\nclass Routing extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    {this.props.loading ?\n                        <div className='Loading'>\n                            <img src={logo} className=\"App-logo\" alt='Logo'/>\n                            Loading...\n                        </div>\n                        :\n                        null\n                    }\n                    <Route exact path=\"/\" component={PlayList}/>\n                    <Route exact path=\"/player\" component={PlayerPage}/>\n                </div>\n            </Router>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.appReducer.loading,\n    }\n}\n\n\nexport default connect(mapStateToProps)(Routing) \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets  see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\nimport './index.css'\n// import App from './App' \nimport Route from './route'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Provider store={store}><Route/></Provider>, document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister() \n"],"sourceRoot":""}